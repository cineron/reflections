#How did viewing a diff between two versions of a file help you see the bug that was introduced?
Using diff makes finding typos much much easier, as it pinpoints the location of changes.

#How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Seeing how you tackled an old problem gives you perspective on you current level of knowledge.

#What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
Automatically saving leaves the user free from worry. However, it may be difficult to find a change.  While manual saving works well for logical save points, it's open to human error.

#Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Saving multiple files, or a repository, makes tracking multiple, inter-related files much easier.  Whereas, other VCSs probably don't need to track more than one file.

#Updating Git:
http://coolestguidesontheplanet.com/install-update-latest-version-git-mac-osx-10-9-mavericks/

#How can you use the commands git log and git diff to view the history of files?
"git log" will show all of the commitments made from a repository.  Whereas "git diff" will show the differences between to "commits."

#How might using version control make you more confident to make changes that could break something?
Using git, you know that you can easily roll back to a state that worked well before your change.
